version: '3.8'

services:
  db:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=public
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  migration:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    command: sh -c "npm run migration"
    depends_on: 
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=public
      - POSTGRES_PORT=5432
    links:
      - "db:database"
  application:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    depends_on:
      migration:
        condition: service_completed_successfully
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=public
      - POSTGRES_PORT=5432
    links:
      - "db:database"
    command: sh -c "npm run dev"
    ports:
      - '3021:3021'

networks:
  db:
    driver: bridge
  migration:
    driver: bridge
  application: 
    driver: bridge

volumes:
  db:
    driver: local
